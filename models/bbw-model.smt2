(declare-const signal_119_0 Real) 
(declare-const signal_118_0 Real) 
(declare-const internalstate_21_0 Real) 
(declare-const signal_111_0 Real) 
(declare-const signal_110_0 Real) 
(declare-const signal_113_0 Real) 
(declare-const signal_112_0 Real) 
(declare-const signal_115_0 Real) 
(declare-const signal_114_0 Real) 
(declare-const signal_117_0 Real) 
(declare-const signal_116_0 Real) 
(declare-const signal_20_0 Real) 
(declare-const signal_21_0 Real) 
(declare-const signal_22_0 Real) 
(declare-const signal_23_0 Real) 
(declare-const signal_24_0 Real) 
(declare-const signal_25_0 Real) 
(declare-const signal_26_0 Real) 
(declare-const signal_27_0 Real) 
(declare-const signal_28_0 Real) 
(declare-const signal_29_0 Real) 
(declare-const internalstate_18_0 Real) 
(declare-const signal_150_0 Real) 
(declare-const internalstate_19_0 Real) 
(declare-const internalstate_25_0 Real) 
(declare-const internalstate_24_0 Real) 
(declare-const signal_128_0 Real) 
(declare-const signal_129_0 Real) 
(declare-const signal_124_0 Real) 
(declare-const signal_125_0 Real) 
(declare-const signal_126_0 Real) 
(declare-const signal_127_0 Real) 
(declare-const signal_120_0 Real) 
(declare-const signal_121_0 Real) 
(declare-const signal_122_0 Real) 
(declare-const signal_158_0 Real) 
(declare-const signal_55_0 Real) 
(declare-const signal_54_0 Real) 
(declare-const signal_57_0 Real) 
(declare-const signal_56_0 Real) 
(declare-const signal_51_0 Real) 
(declare-const signal_50_0 Real) 
(declare-const signal_53_0 Real) 
(declare-const signal_52_0 Real) 
(declare-const internalstate_20_0 Real) 
(declare-const signal_59_0 Real) 
(declare-const signal_58_0 Real) 
(declare-const signal_133_0 Real) 
(declare-const signal_132_0 Real) 
(declare-const signal_131_0 Real) 
(declare-const signal_130_0 Real) 
(declare-const signal_137_0 Real) 
(declare-const signal_136_0 Real) 
(declare-const signal_135_0 Real) 
(declare-const signal_134_0 Real) 
(declare-const signal_139_0 Real) 
(declare-const signal_138_0 Real) 
(declare-const signal_144_0 Real) 
(declare-const signal_46_0 Real) 
(declare-const signal_47_0 Real) 
(declare-const signal_44_0 Real) 
(declare-const signal_78_0 Real) 
(declare-const signal_42_0 Real) 
(declare-const signal_43_0 Real) 
(declare-const signal_40_0 Real) 
(declare-const signal_41_0 Real) 
(declare-const signal_48_0 Real) 
(declare-const signal_49_0 Real) 
(declare-const internalstate_8_0 Real) 
(declare-const internalstate_9_0 Real) 
(declare-const internalstate_1_0 Real) 
(declare-const internalstate_2_0 Real) 
(declare-const internalstate_3_0 Real) 
(declare-const internalstate_4_0 Real) 
(declare-const internalstate_5_0 Real) 
(declare-const internalstate_7_0 Real) 
(declare-const signal_146_0 Real) 
(declare-const signal_147_0 Real) 
(declare-const signal_79_0 Real) 
(declare-const signal_145_0 Real) 
(declare-const signal_142_0 Real) 
(declare-const signal_143_0 Real) 
(declare-const signal_140_0 Real) 
(declare-const signal_141_0 Real) 
(declare-const signal_73_0 Real) 
(declare-const signal_72_0 Real) 
(declare-const signal_71_0 Real) 
(declare-const signal_70_0 Real) 
(declare-const signal_77_0 Real) 
(declare-const signal_76_0 Real) 
(declare-const signal_148_0 Real) 
(declare-const signal_74_0 Real) 
(declare-const signal_75_0 Real) 
(declare-const signal_149_0 Real) 
(declare-const signal_155_0 Real) 
(declare-const signal_154_0 Real) 
(declare-const signal_157_0 Real) 
(declare-const signal_156_0 Real) 
(declare-const signal_151_0 Real) 
(declare-const signal_69_0 Real) 
(declare-const signal_153_0 Real) 
(declare-const signal_152_0 Real) 
(declare-const signal_64_0 Real) 
(declare-const signal_65_0 Real) 
(declare-const signal_66_0 Real) 
(declare-const signal_67_0 Real) 
(declare-const signal_60_0 Real) 
(declare-const signal_61_0 Real) 
(declare-const signal_62_0 Real) 
(declare-const signal_63_0 Real) 
(declare-const signal_9_0 Real) 
(declare-const signal_8_0 Real) 
(declare-const signal_68_0 Real) 
(declare-const signal_1_0 Real) 
(declare-const signal_3_0 Real) 
(declare-const signal_2_0 Real) 
(declare-const signal_5_0 Real) 
(declare-const signal_4_0 Real) 
(declare-const signal_7_0 Real) 
(declare-const signal_6_0 Real) 
(declare-const signal_91_0 Real) 
(declare-const signal_90_0 Real) 
(declare-const signal_93_0 Real) 
(declare-const signal_92_0 Real) 
(declare-const signal_95_0 Real) 
(declare-const signal_94_0 Real) 
(declare-const signal_97_0 Real) 
(declare-const signal_96_0 Real) 
(declare-const signal_99_0 Real) 
(declare-const signal_98_0 Real) 
(declare-const signal_19_0 Real) 
(declare-const signal_18_0 Real) 
(declare-const internalstate_10_0 Real) 
(declare-const internalstate_11_0 Real) 
(declare-const internalstate_16_0 Real) 
(declare-const internalstate_17_0 Real) 
(declare-const internalstate_14_0 Real) 
(declare-const internalstate_15_0 Real) 
(declare-const signal_11_0 Real) 
(declare-const signal_10_0 Real) 
(declare-const signal_13_0 Real) 
(declare-const signal_12_0 Real) 
(declare-const signal_15_0 Real) 
(declare-const signal_14_0 Real) 
(declare-const signal_17_0 Real) 
(declare-const signal_16_0 Real) 
(declare-const signal_45_0 Real) 
(declare-const signal_82_0 Real) 
(declare-const signal_83_0 Real) 
(declare-const signal_80_0 Real) 
(declare-const signal_81_0 Real) 
(declare-const signal_86_0 Real) 
(declare-const signal_87_0 Real) 
(declare-const signal_84_0 Real) 
(declare-const signal_85_0 Real) 
(declare-const signal_88_0 Real) 
(declare-const signal_89_0 Real) 
(declare-const signal_168_0 Real) 
(declare-const signal_169_0 Real) 
(declare-const signal_160_0 Real) 
(declare-const signal_161_0 Real) 
(declare-const signal_162_0 Real) 
(declare-const signal_163_0 Real) 
(declare-const signal_164_0 Real) 
(declare-const signal_165_0 Real) 
(declare-const signal_166_0 Real) 
(declare-const signal_167_0 Real) 
(declare-const signal_108_0 Real) 
(declare-const signal_109_0 Real) 
(declare-const internalstate_23_0 Real) 
(declare-const signal_102_0 Real) 
(declare-const signal_103_0 Real) 
(declare-const signal_100_0 Real) 
(declare-const signal_101_0 Real) 
(declare-const signal_106_0 Real) 
(declare-const signal_107_0 Real) 
(declare-const signal_104_0 Real) 
(declare-const signal_105_0 Real) 
(declare-const signal_39_0 Real) 
(declare-const signal_38_0 Real) 
(declare-const signal_37_0 Real) 
(declare-const signal_36_0 Real) 
(declare-const signal_35_0 Real) 
(declare-const signal_34_0 Real) 
(declare-const signal_33_0 Real) 
(declare-const signal_32_0 Real) 
(declare-const signal_31_0 Real) 
(declare-const signal_30_0 Real) 
(declare-const internalstate_12_0 Real) 
(declare-const internalstate_22_0 Real) 
(declare-const signal_123_0 Real) 
(declare-const signal_159_0 Real) 
(declare-const internalstate_13_0 Real) 
(declare-const signal_171_0 Real) 
(declare-const signal_170_0 Real) 
 
 (define-fun LOOKUP ((x Real)) Real
  (ite (= x 0.0) 0.0 (ite (and (> x 0) (< x 20)) (/ (* x 147) 2) (ite (= x 20) 1470 (ite (and (> x 20) (< x 30)) (- 1470 (* 49 (- x 20))) 980)))))

(define-fun-rec R ((a Real) (b Real) (min Int) (max Int)) Real
    (ite (= min max) (+ 1 max) (ite (> max min) (ite (< a (* b (/ (+ min max) 2))) (R a b min (to_int (/ (+ min max) 2))) (ite (> a (* b (+ 1 (/ (+ min max) 2)))) (R a b (+ (to_int (/ (+ min max) 2)) 1) max) (ite (<= (* b (- a (/ (+ min max) 2))) (- (* b (+ 1 (/ (+ min max) 2))) a)) (/ (+ min max) 2) (+ 1 (/ (+ min max) 2))))) 20)))

(define-fun BSR ((m Real) (g Real)) Real (ite (or (= m 0) (= g 0)) 0 (ite (> m (* 100 g)) 100 (R m g 0 99))))

(declare-const maxbraketorque Real)
(declare-const distrib Real)
(declare-const r Real)
(declare-const _pi Real)
(declare-const slip_abs_on Real)
(declare-const t_veh Real)

(declare-const use_division Real)
(declare-const w_max Real)
(declare-const m Real)
(declare-const v_max Real)
(declare-const w0 Real)
(declare-const i Real)
(declare-const v0 Real)

(assert (! (=  v0 0) :named init1))
(assert (! (=  maxbraketorque 3000):named init2))
(assert (! (=  distrib 3) :named init3))
(assert (! (=  r 0.5) :named init4))
(assert (! (=  _pi 3.14) :named init5))
(assert (! (=  slip_abs_on 0.1) :named init6))
(assert (! (=  t_veh 0.005) :named init7))

(assert (! (=  use_division 0) :named init8))
(assert (! (=  w_max 112) :named init9))
(assert (! (=  m 2000) :named init10))
(assert (! (=  v_max 56) :named init11))
(assert (! (=  w0 (/ v0 r)) :named init12))
(assert (! (=  i (/ (* m (* r r)))) :named init13))
 
(assert (! (ite (> signal_121_0 100) (= signal_1_0 100) (ite (< signal_121_0 0) (= signal_1_0 0) (= signal_121_0 signal_1_0))) :named JRVZIBOKVAHR))
(assert (! (ite (>= 0.5 (- signal_158_0 (to_int signal_158_0))) (= signal_2_0 (to_int signal_158_0)) (= signal_2_0
        (+ 1 (to_int signal_158_0)))) :named BNCIOUOUHUDT))
(assert (! (= signal_3_0 (* signal_2_0 (/ maxbraketorque 100))) :named GVGHXVKYNQKC))
(assert (! (= signal_171_0 (* signal_4_0 distrib)) :named RVLWBAHRYBJB))
(assert (! (ite (> signal_6_0 10) (= signal_167_0 signal_153_0) (= signal_167_0 signal_153_0)) :named QTSUPVTVSROK))
(assert (! (= signal_8_0 (* signal_163_0 (/ (* r _pi ) 30))) :named WZVCDNIWWZSH))
(assert (! (= signal_9_0 (* signal_6_0 (/ 10 36))) :named VFVGLIXJWJZG))
(assert (! (= signal_10_0 (+ (- 0 signal_8_0) signal_9_0)) :named DYQLUWWHIMSR))
(assert (! (ite (> signal_10_0 10000000) (= signal_11_0 10000000) (ite (< signal_10_0 0) (= signal_11_0 0) (= signal_10_0 signal_11_0))) :named PRXLUTNLPCHX))
(assert (! (= signal_12_0 (* signal_11_0 10)) :named RZWEYQLBESPS))
(assert (! (= signal_13_0 (* signal_9_0 (* 10 slip_abs_on))) :named YBCYIKSVWTWB))
(assert (! (ite (> signal_12_0 signal_13_0) (= signal_15_0 1) (= signal_15_0 0)) :named RZKCJIZUFVYT))
(assert (! (= signal_14_0 0) :named OAVZASZMVIBO))
(assert (! (ite (> signal_14_0 0) (= signal_153_0 signal_15_0) (= signal_153_0 signal_15_0)) :named ILCTZYZKVDEA))
(assert (! (ite (> signal_6_0 10) (= signal_168_0 signal_154_0) (= signal_168_0 signal_154_0)) :named CWUSJBSJKARI))
(assert (! (= signal_18_0 (* signal_164_0 (/ (* r _pi ) 30))) :named JBZPDSBIAZSP))
(assert (! (= signal_19_0 (* signal_6_0 (/ 10 36))) :named LRSACTPJTPKR))
(assert (! (= signal_20_0 (+ (- 0 signal_18_0) signal_19_0)) :named AELOTDATQCSX))
(assert (! (ite (> signal_20_0 10000000) (= signal_21_0 10000000) (ite (< signal_20_0 0) (= signal_21_0 0) (= signal_20_0 signal_21_0))) :named VGPYCRVYZNWY))
(assert (! (= signal_22_0 (* signal_21_0 10)) :named MKVOSXFRIIDR))
(assert (! (= signal_23_0 (* signal_19_0 (* 10 slip_abs_on))) :named KHSRJSXDQVIH))
(assert (! (ite (> signal_22_0 signal_23_0) (= signal_25_0 1) (= signal_25_0 0)) :named SFWVZNCIEGZI))
(assert (! (= signal_24_0 0) :named UUKCLBIGWNPS))
(assert (! (ite (> signal_24_0 0) (= signal_154_0 signal_25_0) (= signal_154_0 signal_25_0)) :named CTENHEOLFAQB))
(assert (! (ite (> signal_6_0 10) (= signal_169_0 signal_155_0) (= signal_169_0 signal_155_0)) :named DFGLJMWEYVPS))
(assert (! (= signal_28_0 (* signal_165_0 (/ (* r _pi ) 30))) :named ECMHXAATUQTC))
(assert (! (= signal_29_0 (* signal_6_0 (/ 10 36))) :named OIAVYROQZKXK))
(assert (! (= signal_30_0 (+ (- 0 signal_28_0) signal_29_0)) :named CMYRADWBJEEE))
(assert (! (ite (> signal_30_0 10000000) (= signal_31_0 10000000) (ite (< signal_30_0 0) (= signal_31_0 0) (= signal_30_0 signal_31_0))) :named FFKMMQTGUEXN))
(assert (! (= signal_32_0 (* signal_31_0 10)) :named UXROKYSIVFKM))
(assert (! (= signal_33_0 (* signal_29_0 (* 10 slip_abs_on))) :named MPUSCQCFTFRL))
(assert (! (ite (> signal_32_0 signal_33_0) (= signal_35_0 1) (= signal_35_0 0)) :named RKGNQDUBUHIS))
(assert (! (= signal_34_0 0) :named JISMAWZWNZSU))
(assert (! (ite (> signal_34_0 0) (= signal_155_0 signal_35_0) (= signal_155_0 signal_35_0)) :named VRIMTGDBXBYB))
(assert (! (ite (> signal_6_0 10) (= signal_170_0 signal_156_0) (= signal_170_0 signal_156_0)) :named QGRHEVLYQCEK))
(assert (! (= signal_38_0 (* signal_166_0 (/ (* r _pi ) 30))) :named SOULUFGHNPXT))
(assert (! (= signal_39_0 (* signal_6_0 (/ 10 36))) :named HCGHYCCXBYPO))
(assert (! (= signal_40_0 (+ (- 0 signal_38_0) signal_39_0)) :named NSFWEDJTEDZI))
(assert (! (ite (> signal_40_0 10000000) (= signal_41_0 10000000) (ite (< signal_40_0 0) (= signal_41_0 0) (= signal_40_0 signal_41_0))) :named EFJEMNFRMESY))
(assert (! (= signal_42_0 (* signal_41_0 10)) :named IIXIAUOHSQYX))
(assert (! (= signal_43_0 (* signal_39_0 (* 10 slip_abs_on))) :named BOOKWHJBZUWX))
(assert (! (ite (> signal_42_0 signal_43_0) (= signal_45_0 1) (= signal_45_0 0)) :named TRLSTISHOMHG))
(assert (! (= signal_44_0 0) :named AQWRHNDHMNWB))
(assert (! (ite (> signal_44_0 0) (= signal_156_0 signal_45_0) (= signal_156_0 signal_45_0)) :named VQXAIBMLGZNZ))
(assert (! (= signal_52_0 (* signal_51_0 5)) :named UYXYTONAFJND))
(assert (! (= signal_53_0 (* signal_46_0 -1)) :named GXCTHYNVAWMU))
(assert (! (= signal_54_0 (* signal_47_0 -1)) :named GJLTWVBYSCLS))
(assert (! (= signal_55_0 (* signal_48_0 -1)) :named XDRQZKGPOSPD))
(assert (! (= signal_56_0 (* signal_49_0 -1)) :named FNUMWGVNPIKM))
(assert (! (ite (> signal_52_0 0) (= signal_60_0 signal_53_0) (= signal_60_0 signal_53_0)) :named OLDQLHRJHGRR))
(assert (! (ite (> signal_52_0 0) (= signal_61_0 signal_54_0) (= signal_61_0 signal_54_0)) :named KKTAIGVEMTJG))
(assert (! (ite (> signal_52_0 0) (= signal_62_0 signal_55_0) (= signal_62_0 signal_55_0)) :named AYFCVKZMIFPW))
(assert (! (ite (> signal_52_0 0) (= signal_63_0 signal_56_0) (= signal_63_0 signal_56_0)) :named PWNQYDVRSBPH))
(assert (! (= signal_65_0 (* signal_73_0 r)) :named YDVZORGLUFLF))
(assert (! (= signal_66_0 (- (+ 0 signal_64_0) signal_65_0)) :named VSKZYXPSZNMT))
(assert (! (ite (> signal_64_0 signal_65_0) (= signal_77_0 signal_64_0) (= signal_77_0 signal_64_0)) :named NCHYGEIDXRNU))
(assert (! (= signal_70_0 (* signal_69_0 r)) :named AQPAONQSVQIG))
(assert (! (= signal_67_0 (* signal_66_0 100)) :named CCCAXMZIACMY))
(assert (! (= signal_71_0 (- (+ 0 signal_60_0) signal_70_0)) :named ZVMUDVTDMXAC))
(assert (! (= signal_69_0 (* (* 1 signal_68_0) signal_84_0)) :named BHPBMHUSWAAC))
(assert (! (ite (= signal_67_0 0) (= signal_68_0 0) (ite (< signal_67_0 0) (= signal_68_0 -1) (= 1 signal_68_0))) :named DZHKJEQPQZKM))
(assert (! (ite (= signal_71_0 0) (= signal_72_0 0) (ite (< signal_71_0 0) (= signal_72_0 -1) (= 1 signal_72_0))) :named IMIIEINOGZKE))
(assert (! (ite (>= signal_67_0 0.0) (= signal_76_0 signal_67_0) (= signal_76_0 (- signal_67_0))) :named HARKKJUJTQTM))
(assert (! (= signal_74_0 (+ (+ 0 signal_72_0) signal_73_0)) :named QGKBPQWSVSIO))
(assert (! (and (= internalstate_1_0 16) (= internalstate_1_0 signal_75_0)) :named QVVAEZYBJQPY))
(assert (! (ite (> signal_75_0 w_max) (= signal_73_0 w_max) (ite (< signal_75_0 0) (= signal_73_0 0) (= signal_75_0 signal_73_0))) :named XZDXLDHVZHRN))
(assert (! (= signal_84_0 (LOOKUP signal_83_0)) :named OIQXIGNFXBJT))
(assert (! (= signal_85_0 (* signal_73_0 (/ 30 _pi ))) :named TPXFIOMIWBZV))
(assert (! (= signal_78_0 (/ (* 1 signal_76_0) signal_77_0)) :named SWJOPILJZNPA))
(assert (! (= signal_79_0 0) :named SZJIGFWFDYGT))
(assert (! (= signal_81_0 use_division) :named NYUXQPECKMYX))
(assert (! (ite (> signal_78_0 0) (= signal_80_0 signal_79_0) (= signal_80_0 signal_79_0)) :named BNSKDHLMACEC))
(assert (! (ite (> signal_81_0 0) (= signal_83_0 signal_82_0) (= signal_83_0 signal_82_0)) :named IPSUYUJONHTT))
(assert (! (= signal_82_0 (BSR signal_76_0 signal_77_0)) :named FKHTTZJYPNKQ))
(assert (! (= signal_86_0 (* signal_94_0 r)) :named NIGUMXJBMMOR))
(assert (! (= signal_87_0 (- (+ 0 signal_64_0) signal_86_0)) :named XJLSVJTDKSBQ))
(assert (! (ite (> signal_64_0 signal_86_0) (= signal_98_0 signal_64_0) (= signal_98_0 signal_64_0)) :named VTUWDQBPLLZN))
(assert (! (= signal_91_0 (* signal_90_0 r)) :named IFRLNNJIQSCI))
(assert (! (= signal_88_0 (* signal_87_0 100)) :named JIGSEASIVDGY))
(assert (! (= signal_92_0 (- (+ 0 signal_61_0) signal_91_0)) :named KALLIIDIMRFR))
(assert (! (= signal_90_0 (* (* 1 signal_89_0) signal_105_0)) :named AUTCSRSALGPH))
(assert (! (ite (= signal_88_0 0) (= signal_89_0 0) (ite (< signal_88_0 0) (= signal_89_0 -1) (= 1 signal_89_0))) :named SPHZQAIWWYTC))
(assert (! (ite (= signal_92_0 0) (= signal_93_0 0) (ite (< signal_92_0 0) (= signal_93_0 -1) (= 1 signal_93_0))) :named MCHMJNWQFZQS))
(assert (! (ite (>= signal_88_0 0.0) (= signal_97_0 signal_88_0) (= signal_97_0 (- signal_88_0))) :named SEINFZCHTBXF))
(assert (! (= signal_95_0 (+ (+ 0 signal_93_0) signal_94_0)) :named HWVQKVXCYERT))
(assert (! (and (= internalstate_2_0 16) (= internalstate_2_0 signal_96_0)) :named LNXSUGZNCXYK))
(assert (! (ite (> signal_96_0 w_max) (= signal_94_0 w_max) (ite (< signal_96_0 0) (= signal_94_0 0) (= signal_96_0 signal_94_0))) :named TNQEQULWEJIW))
(assert (! (= signal_105_0 (LOOKUP signal_104_0)) :named XOPTSFGLFQJR))
(assert (! (= signal_106_0 (* signal_94_0 (/ 30 _pi ))) :named LUZDGGEDBGXI))
(assert (! (= signal_99_0 (/ (* 1 signal_97_0) signal_98_0)) :named WSGUCEIDNWDR))
(assert (! (= signal_100_0 0) :named QVMQJQXBWZMQ))
(assert (! (= signal_102_0 use_division) :named NBLUMMEFLKWT))
(assert (! (ite (> signal_99_0 0) (= signal_101_0 signal_100_0) (= signal_101_0 signal_100_0)) :named AYSGIKFPPAPI))
(assert (! (ite (> signal_102_0 0) (= signal_104_0 signal_103_0) (= signal_104_0 signal_103_0)) :named XICOIQPFQJPA))
(assert (! (= signal_103_0 (BSR signal_97_0 signal_98_0)) :named TVQQDNRMMCBC))
(assert (! (= signal_107_0 (* signal_115_0 r)) :named EVDYSPURKMYA))
(assert (! (= signal_108_0 (- (+ 0 signal_64_0) signal_107_0)) :named CFDVIIYGWPFT))
(assert (! (ite (> signal_64_0 signal_107_0) (= signal_119_0 signal_64_0) (= signal_119_0 signal_64_0)) :named TQLJPHHQYYQY))
(assert (! (= signal_112_0 (* signal_111_0 r)) :named MEKDGSKOUCIE))
(assert (! (= signal_109_0 (* signal_108_0 100)) :named UDOWVQOSIHHX))
(assert (! (= signal_113_0 (- (+ 0 signal_62_0) signal_112_0)) :named NJSNAWMLNYLH))
(assert (! (= signal_111_0 (* (* 1 signal_110_0) signal_126_0)) :named RTVSHGZRDFTY))
(assert (! (ite (= signal_109_0 0) (= signal_110_0 0) (ite (< signal_109_0 0) (= signal_110_0 -1) (= 1 signal_110_0))) :named MOZUDVTQICBW))
(assert (! (ite (= signal_113_0 0) (= signal_114_0 0) (ite (< signal_113_0 0) (= signal_114_0 -1) (= 1 signal_114_0))) :named DGFMAZQMSMFM))
(assert (! (ite (>= signal_109_0 0.0) (= signal_118_0 signal_109_0) (= signal_118_0 (- signal_109_0))) :named SPEZIJNDDKOC))
(assert (! (= signal_116_0 (+ (+ 0 signal_114_0) signal_115_0)) :named XBKRUPBGKMFV))
(assert (! (and (= internalstate_3_0 16) (= internalstate_3_0 signal_117_0)) :named YWDOVFHRCMMT))
(assert (! (ite (> signal_117_0 w_max) (= signal_115_0 w_max) (ite (< signal_117_0 0) (= signal_115_0 0) (= signal_117_0 signal_115_0))) :named QYZDGDSSSMIL))
(assert (! (= signal_126_0 (LOOKUP signal_125_0)) :named CDOFTBBUADNO))
(assert (! (= signal_127_0 (* signal_115_0 (/ 30 _pi ))) :named SOCEKJSWYWSA))
(assert (! (= signal_120_0 (/ (* 1 signal_118_0) signal_119_0)) :named ICVYHOOJELGS))
(assert (! (= signal_121_0 0) :named SHSNVUTLGYWP))
(assert (! (= signal_123_0 use_division) :named NYPKSWBUDHCW))
(assert (! (ite (> signal_120_0 0) (= signal_122_0 signal_121_0) (= signal_122_0 signal_121_0)) :named GCGXYMKMEPNE))
(assert (! (ite (> signal_123_0 0) (= signal_125_0 signal_124_0) (= signal_125_0 signal_124_0)) :named PFBQMYQCKQNI))
(assert (! (= signal_124_0 (BSR signal_118_0 signal_119_0)) :named UPFAAHLPEGLN))
(assert (! (= signal_128_0 (* signal_136_0 r)) :named BTBAZJYVNHSR))
(assert (! (= signal_129_0 (- (+ 0 signal_64_0) signal_128_0)) :named UKQFKIQLMHOA))
(assert (! (ite (> signal_64_0 signal_128_0) (= signal_140_0 signal_64_0) (= signal_140_0 signal_64_0)) :named YYJAOAKAAMZN))
(assert (! (= signal_133_0 (* signal_132_0 r)) :named POGBTHREWULT))
(assert (! (= signal_130_0 (* signal_129_0 100)) :named ZOODVIDKZIYF))
(assert (! (= signal_134_0 (- (+ 0 signal_63_0) signal_133_0)) :named BUDAANWFQSUT))
(assert (! (= signal_132_0 (* (* 1 signal_131_0) signal_147_0)) :named ESJROARNDPIU))
(assert (! (ite (= signal_130_0 0) (= signal_131_0 0) (ite (< signal_130_0 0) (= signal_131_0 -1) (= 1 signal_131_0))) :named GXTEEYMKYRPD))
(assert (! (ite (= signal_134_0 0) (= signal_135_0 0) (ite (< signal_134_0 0) (= signal_135_0 -1) (= 1 signal_135_0))) :named MGWGCLMMMFDZ))
(assert (! (ite (>= signal_130_0 0.0) (= signal_139_0 signal_130_0) (= signal_139_0 (- signal_130_0))) :named JFOAWUUROQSE))
(assert (! (= signal_137_0 (+ (+ 0 signal_135_0) signal_136_0)) :named QWECCCYZJEGB))
(assert (! (and (= internalstate_4_0 16) (= internalstate_4_0 signal_138_0)) :named SECDBELYNRBR))
(assert (! (ite (> signal_138_0 w_max) (= signal_136_0 w_max) (ite (< signal_138_0 0) (= signal_136_0 0) (= signal_138_0 signal_136_0))) :named FURJKHHIYNCK))
(assert (! (= signal_147_0 (LOOKUP signal_146_0)) :named XKQSOUNSFETZ))
(assert (! (= signal_148_0 (* signal_136_0 (/ 30 _pi ))) :named GRFWYIHVVBDB))
(assert (! (= signal_141_0 (/ (* 1 signal_139_0) signal_140_0)) :named UAOOUQWEXCBX))
(assert (! (= signal_142_0 0) :named MFAZVLHLQING))
(assert (! (= signal_144_0 use_division) :named QFBBJPBZFTJZ))
(assert (! (ite (> signal_141_0 0) (= signal_143_0 signal_142_0) (= signal_143_0 signal_142_0)) :named RNOXOMCWBHMU))
(assert (! (ite (> signal_144_0 0) (= signal_146_0 signal_145_0) (= signal_146_0 signal_145_0)) :named INWTENEYJRMN))
(assert (! (= signal_145_0 (BSR signal_139_0 signal_140_0)) :named EMZFHWVTSPWD))
(assert (! (= signal_149_0 (+ (+ (+ (+ 0 signal_69_0) signal_90_0) signal_111_0) signal_132_0)) :named YFXIXTOKFACY))
(assert (! (= signal_150_0 (* signal_149_0 (/ t_veh m))) :named SYIXLZQNRFOI))
(assert (! (= signal_151_0 (- (+ 0 signal_150_0) signal_64_0)) :named ERDPBVUFNJIJ))
(assert (! (and (= internalstate_5_0 v0) (= internalstate_5_0 signal_152_0)) :named VLNWRSGPJCRD))
(assert (! (ite (> signal_152_0 v_max) (= signal_64_0 v_max) (ite (< signal_152_0 0) (= signal_64_0 0) (= signal_152_0 signal_64_0))) :named TMGCWMBMPNPG))
(assert (! (ite (>= 0.5 (- signal_85_0 (to_int signal_85_0))) (= signal_7_0 (to_int signal_85_0)) (= signal_7_0
        (+ 1 (to_int signal_85_0)))) :named XQRXGANDLLJC))
(assert (! (ite (>= 0.5 (- signal_106_0 (to_int signal_106_0))) (= signal_17_0 (to_int signal_106_0)) (= signal_17_0
        (+ 1 (to_int signal_106_0)))) :named ULAVEYZJJUWR))
(assert (! (ite (>= 0.5 (- signal_127_0 (to_int signal_127_0))) (= signal_27_0 (to_int signal_127_0)) (= signal_27_0
        (+ 1 (to_int signal_127_0)))) :named FGYKPKJILQOB))
(assert (! (ite (>= 0.5 (- signal_148_0 (to_int signal_148_0))) (= signal_37_0 (to_int signal_148_0)) (= signal_37_0
        (+ 1 (to_int signal_148_0)))) :named YWLTHJVEUPLC))
(assert (! (= signal_57_0 (+ (+ (+ (+ 0 signal_159_0) signal_160_0) signal_161_0) signal_162_0)) :named MQFAEPVBNFKG))
(assert (! (= signal_58_0 (* signal_57_0 (/ 1 4))) :named AJKGNRSLVZEL))
(assert (! (= signal_59_0 (* signal_58_0 (/ _pi 30))) :named PUIZLFBHHNMY))
(assert (! (= signal_157_0 (* signal_59_0 (* 3.6 r))) :named DTGUTAPLOYTO))
(assert (! (ite (> signal_121_0 100) (= signal_50_0 100) (ite (< signal_121_0 0) (= signal_50_0 0) (= signal_121_0 signal_50_0))) :named BZYLXGEWRSVO))
(assert (! (ite (>= 0.5 (- signal_50_0 (to_int signal_50_0))) (= signal_51_0 (to_int signal_50_0)) (= signal_51_0
        (+ 1 (to_int signal_50_0)))) :named LNFYNZBYNNMZ))
(assert (! (and (= internalstate_11_0 (* v0 3.6)) (= internalstate_11_0 signal_6_0)) :named DQMWDEFYZXFY))
(assert (! (and (= internalstate_7_0 0) (= internalstate_7_0 signal_5_0)) :named PMRIXHZUPISD))
(assert (! (and (= internalstate_8_0 0) (= internalstate_8_0 signal_16_0)) :named SWRTFOOUCTRF))
(assert (! (and (= internalstate_9_0 0) (= internalstate_9_0 signal_26_0)) :named VJLSVASGQWST))
(assert (! (and (= internalstate_10_0 0) (= internalstate_10_0 signal_36_0)) :named JTVNJBWCZXBD))
(assert (! (and (= internalstate_11_0 (* v0 3.6)) (= internalstate_11_0 signal_6_0)) :named PMXVLMAGNKNL))
(assert (! (and (= internalstate_12_0 0) (= internalstate_12_0 signal_158_0)) :named YIQKVFUJGXMQ))
(assert (! (and (= internalstate_13_0 0) (= internalstate_13_0 signal_46_0)) :named UAXIRQQBNSLS))
(assert (! (and (= internalstate_14_0 0) (= internalstate_14_0 signal_47_0)) :named YDPQIGNYYUOV))
(assert (! (and (= internalstate_15_0 0) (= internalstate_15_0 signal_48_0)) :named HDDQWQBGUNPL))
(assert (! (and (= internalstate_16_0 0) (= internalstate_16_0 signal_49_0)) :named YRZXKJBNPSGB))
(assert (! (and (= internalstate_17_0 (* w0 (/ _pi 30))) (= internalstate_17_0 signal_159_0)) :named ADXEXAVOHCHB))
(assert (! (and (= internalstate_18_0 (* w0 (/ _pi 30))) (= internalstate_18_0 signal_160_0)) :named XABPXWGCZKKK))
(assert (! (and (= internalstate_19_0 (* w0 (/ _pi 30))) (= internalstate_19_0 signal_161_0)) :named QMVPZWUBHGIT))
(assert (! (and (= internalstate_20_0 (* w0 (/ _pi 30))) (= internalstate_20_0 signal_162_0)) :named MDJBTJFUDAYC))
(assert (! (and (= internalstate_21_0 (* w0 (/ _pi 30))) (= internalstate_21_0 signal_163_0)) :named UFFBGVBHGGIQ))
(assert (! (and (= internalstate_22_0 (* w0 (/ _pi 30))) (= internalstate_22_0 signal_164_0)) :named HAUCLJBFABWU))
(assert (! (and (= internalstate_23_0 (* w0 (/ _pi 30))) (= internalstate_23_0 signal_165_0)) :named KRQXZOBOUNMA))
(assert (! (and (= internalstate_24_0 (* w0 (/ _pi 30))) (= internalstate_24_0 signal_166_0)) :named JHINUFBEBNIM))
(assert (! (and (= internalstate_25_0 (* w0 (/ _pi 30))) (= internalstate_25_0 signal_4_0)) :named ALGCQMBMCWCZ))